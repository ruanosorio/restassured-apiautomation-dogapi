name: Testes de API com Relatório Allure

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  testes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4
      
    - name: Configurar JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Configurar Gradle
      uses: gradle/actions/setup-gradle@v4
      
    - name: Dar permissão ao wrapper do Gradle
      run: chmod +x ./gradlew
      
    - name: Executar testes
      run: ./gradlew clean test --info
      continue-on-error: true
      
    - name: Gerar relatório Allure
      run: ./gradlew allureReport
      if: always()
      
    - name: Upload dos resultados Allure
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: resultados-allure
        path: build/allure-results/
        retention-days: 30
        
    - name: Upload do relatório Allure
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: relatorio-allure
        path: build/reports/allure-report/
        retention-days: 30
        
    - name: Publicar relatório Allure
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: build/allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
        keep_reports: 20
        
    - name: 🧾 Resumo dos Testes
      if: always()
      run: |
        {
          echo "## 📊 Relatório de Testes Allure"
          echo ""
        
          RESULTS_COUNT=0
          if [ -d "build/test-results/test" ] && [ "$(ls -A build/test-results/test 2>/dev/null)" ]; then
            RESULTS_COUNT=$(ls build/test-results/test | wc -l)
            echo "✅ **Testes executados com sucesso** ($RESULTS_COUNT arquivos)"
          elif [ -d "build/allure-results" ] && [ "$(ls -A build/allure-results 2>/dev/null)" ]; then
            RESULTS_COUNT=$(ls build/allure-results | wc -l)
            echo "✅ **Testes executados - Resultados Allure gerados** ($RESULTS_COUNT arquivos)"
          else
            echo "❌ **Nenhum resultado de teste encontrado**"
          fi
        
          echo ""
          echo "### 📁 Artefatos"
          echo "- Resultados: \`build/allure-results/\`"
          echo "- Relatório HTML: \`build/reports/allure-report/\`"
          echo ""
          echo "### 🔗 Links Úteis"
          echo "- Online: [Abrir Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)"
          echo "- Local: \`./gradlew allureServe\`"
          echo ""
          echo "**Pipeline:** #${{ github.run_number }} | **Branch:** \`${{ github.ref_name }}\`"
        } >> $GITHUB_STEP_SUMMARY
