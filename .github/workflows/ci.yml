name: Testes de API com Relatório Allure

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  testes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4
      
    - name: Configurar JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Configurar Gradle
      uses: gradle/actions/setup-gradle@v4
      
    - name: Dar permissão ao wrapper do Gradle
      run: chmod +x ./gradlew
      
    - name: Executar testes
      run: ./gradlew clean test
      continue-on-error: true
      
    - name: Gerar relatório Allure
      run: ./gradlew allureReport
      if: always()
      
    - name: Publicar relatório Allure como artefato
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: resultados-allure
        path: build/allure-results/
        retention-days: 30
        
    - name: Upload do relatório Allure
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: relatorio-allure
        path: build/reports/allure-report/
        retention-days: 30
        
    - name: Publicar relatório no GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: always() && github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/reports/allure-report
        destination_dir: allure-report
        
    - name: Adicionar URL do relatório ao resumo
      if: always() && github.ref == 'refs/heads/main'
      run: |
        echo "## 📊 Relatório de Testes Allure" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **URL do Relatório:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📋 **Resultados dos Testes:**" >> $GITHUB_STEP_SUMMARY
        if [ -f build/test-results/test/TEST-*.xml ]; then
          echo "- ✅ Testes executados com sucesso" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Nenhum resultado de teste encontrado" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Comentar no PR com relatório Allure
      if: always() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## 📊 Relatório de Testes Allure\n\n';
          comment += '🔗 **O relatório estará disponível após o merge na branch main**\n\n';
          
          // Verificar se os resultados dos testes existem
          const testResultsPath = 'build/test-results/test';
          if (fs.existsSync(testResultsPath)) {
            const files = fs.readdirSync(testResultsPath);
            const xmlFiles = files.filter(file => file.endsWith('.xml'));
            comment += `📋 **Resumo dos Testes:**\n`;
            comment += `- Arquivos de teste processados: ${xmlFiles.length}\n`;
            comment += `- Relatório Allure gerado ✅\n`;
          } else {
            comment += '❌ Nenhum resultado de teste encontrado\n';
          }
          
          comment += '\n📁 **Artefatos Gerados:**\n';
          comment += '- Resultados Allure\n';
          comment += '- Relatório Allure HTML\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });